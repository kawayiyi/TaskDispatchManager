<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>

//  导入MultipleOutputHelper.ttinclude文件
<#@include file="$(SolutionDir)\TaskDispatchManager.Common\T4\MultipleOutputHelper.ttinclude"#> 

<#		
		var manager = Manager.Create(Host, GenerationEnvironment);  
		string connectionString= Manager.connectionString;		
		SqlConnection conn = new SqlConnection(connectionString);
		conn.Open();
	
		string selectQuery ="SET FMTONLY ON; select * from @tableName; SET FMTONLY OFF;";
		SqlCommand command = new SqlCommand(selectQuery,conn);
		SqlDataAdapter ad = new SqlDataAdapter(command);
		System.Data.DataSet ds = new DataSet(); 
		manager.StartNewFile("IDalAll.cs");


		System.Data.DataTable schema = conn.GetSchema("Tables");

			
		  	
#>

using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TaskDispatchManager.DBModels.Base;

namespace TaskDispatchManager.IDAL
{
<# 
		foreach(System.Data.DataRow row in schema.Rows)
		{	
			ds.Tables.Clear();
			string tb_name= row["TABLE_NAME"].ToString();		
			command.CommandText = selectQuery.Replace("@tableName",row["TABLE_NAME"].ToString());
			ad.FillSchema(ds, SchemaType.Mapped,tb_name);  

#>
    public partial interface I<#=tb_name#>Dal:IBaseDal<<#=tb_name#>>
    {
    }

<# } #>
}

<#
		manager.EndBlock();    
        conn.Close();  
       manager.Process(true);  
	    #> 